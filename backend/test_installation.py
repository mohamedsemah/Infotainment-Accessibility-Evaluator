#!/usr/bin/env python3
"""
Simple test script to verify the installation works
"""

def test_imports():
    """Test that all required modules can be imported"""
    try:
        import fastapi
        print("‚úÖ FastAPI imported successfully")
    except ImportError as e:
        print(f"‚ùå FastAPI import failed: {e}")
        return False
    
    try:
        import uvicorn
        print("‚úÖ Uvicorn imported successfully")
    except ImportError as e:
        print(f"‚ùå Uvicorn import failed: {e}")
        return False
    
    try:
        import pydantic
        print("‚úÖ Pydantic imported successfully")
    except ImportError as e:
        print(f"‚ùå Pydantic import failed: {e}")
        return False
    
    try:
        import jinja2
        print("‚úÖ Jinja2 imported successfully")
    except ImportError as e:
        print(f"‚ùå Jinja2 import failed: {e}")
        return False
    
    try:
        from PIL import Image
        print("‚úÖ Pillow imported successfully")
    except ImportError as e:
        print(f"‚ùå Pillow import failed: {e}")
        return False
    
    try:
        import tinycss2
        print("‚úÖ tinycss2 imported successfully")
    except ImportError as e:
        print(f"‚ùå tinycss2 import failed: {e}")
        return False
    
    try:
        import bs4
        print("‚úÖ BeautifulSoup4 imported successfully")
    except ImportError as e:
        print(f"‚ùå BeautifulSoup4 import failed: {e}")
        return False
    
    try:
        import lxml
        print("‚úÖ lxml imported successfully")
    except ImportError as e:
        print(f"‚ùå lxml import failed: {e}")
        return False
    
    try:
        import watchdog
        print("‚úÖ watchdog imported successfully")
    except ImportError as e:
        print(f"‚ùå watchdog import failed: {e}")
        return False
    
    try:
        import websockets
        print("‚úÖ websockets imported successfully")
    except ImportError as e:
        print(f"‚ùå websockets import failed: {e}")
        return False
    
    try:
        import httpx
        print("‚úÖ httpx imported successfully")
    except ImportError as e:
        print(f"‚ùå httpx import failed: {e}")
        return False
    
    try:
        import sqlalchemy
        print("‚úÖ SQLAlchemy imported successfully")
    except ImportError as e:
        print(f"‚ùå SQLAlchemy import failed: {e}")
        return False
    
    try:
        import reportlab
        print("‚úÖ ReportLab imported successfully")
    except ImportError as e:
        print(f"‚ùå ReportLab import failed: {e}")
        return False
    
    try:
        import pandas
        print("‚úÖ Pandas imported successfully")
    except ImportError as e:
        print(f"‚ùå Pandas import failed: {e}")
        return False
    
    try:
        import pytest
        print("‚úÖ pytest imported successfully")
    except ImportError as e:
        print(f"‚ùå pytest import failed: {e}")
        return False
    
    return True

def test_basic_functionality():
    """Test basic functionality of key modules"""
    try:
        from fastapi import FastAPI
        app = FastAPI()
        print("‚úÖ FastAPI app creation works")
    except Exception as e:
        print(f"‚ùå FastAPI app creation failed: {e}")
        return False
    
    try:
        from pydantic import BaseModel
        class TestModel(BaseModel):
            name: str
        model = TestModel(name="test")
        print("‚úÖ Pydantic model creation works")
    except Exception as e:
        print(f"‚ùå Pydantic model creation failed: {e}")
        return False
    
    return True

if __name__ == "__main__":
    print("Testing Infotainment Accessibility Evaluator installation...")
    print("=" * 60)
    
    print("\n1. Testing imports...")
    imports_ok = test_imports()
    
    print("\n2. Testing basic functionality...")
    functionality_ok = test_basic_functionality()
    
    print("\n" + "=" * 60)
    if imports_ok and functionality_ok:
        print("üéâ All tests passed! Installation is working correctly.")
        print("\nYou can now run the application with:")
        print("  uvicorn main:app --reload")
    else:
        print("‚ùå Some tests failed. Please check the error messages above.")
        print("\nTry installing with the minimal requirements:")
        print("  pip install -r requirements-minimal.txt")
